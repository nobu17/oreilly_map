@if (Stores != null)
{
    <MudGrid>
        @foreach (var store in Stores)
        {
            <MudItem xs="12" md="6">
                <MudCard Outlined="true">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudLink Typo="Typo.h6" Href="@GetMapLink(store)">@store.StoreName</MudLink>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            @if (!string.IsNullOrWhiteSpace(store.StoreUrl))
                            {
                                <MudIconButton Icon="@Icons.Material.Outlined.Home" Color="Color.Primary" Size="Size.Large" Link="@store.StoreUrl" Target="_blank" />
                            }
                            @if (!string.IsNullOrWhiteSpace(store.MapUrl))
                            {
                                <MudIconButton Icon="@Icons.Material.Outlined.AddLocation" Color="Color.Primary" Size="Size.Large" Link="@store.MapUrl" Target="_blank" />
                            }
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        @if (CurrentPosition != null)
                        {
                            <p>現在地から：@GetDistanceString(store, CurrentPosition)</p>
                        }
                        <MudText Typo="Typo.body1">@store.PostalCode @store.Address</MudText>
                        <MudText Typo="Typo.body2">@store.TelCode</MudText>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    [Parameter]
    public List<Store> Stores { get; set; } = new List<Store>();

    [Parameter]
    public Domains.Models.Position CurrentPosition { get; set; }

    [Parameter]
    public EventCallback<Domains.Models.Position> OnStorePositionSelected { get; set; }

    private static string GetDistanceString(Store store, Domains.Models.Position position)
    {
        var meter = store.GetDistance(position.Latitude, position.Longitude) / 1000;
        return Math.Round(meter, 3).ToString() + " km";
    }

    private static string GetMapLink(Store store)
    {
        return $"map?latitude={store.Position.Latitude}&longitude={store.Position.Longitude}";
    }
}
