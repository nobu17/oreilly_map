@inject IJSRuntime js;

<div>
    <div id="mapcontainer" style="height: 75vh; width: 100%; margin:0;"></div>
</div>

@code {
    public bool isInitilized = false;

    [Parameter]
    public EventCallback<Store> OnStoreMarkerSelected { get; set; }

    [Parameter]
    public int? MapZoomLevel { get; set; }

    public async Task InitAsync(List<Store> stores, Domains.Models.Position position)
    {
        var mapModule = await js.InvokeAsync<IJSObjectReference>("import", "./js/leaflet-map.js");

        if (!isInitilized)
        {
            var objRef = DotNetObjectReference.Create(this);
            await mapModule.InvokeVoidAsync("initMap", objRef, MapZoomLevel);
            isInitilized = true;
        }

        if (position != null)
        {
            await mapModule.InvokeVoidAsync("setPosition", position, MapZoomLevel);
        }
        if (stores != null && stores.Any())
        {
            await mapModule.InvokeVoidAsync("setData", stores);
        }
    }

    [JSInvokable]
    public void OnStoreMarkerClicked(Store store)
    {
        OnStoreMarkerSelected.InvokeAsync(store);
    }
}