<MudGrid>
    <MudItem xs="12">
        <MudGrid Justify="Justify.Center">
            <MudItem>
                <MudButton Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Explore"
                           Color="Color.Primary" Size="Size.Large"
                           Disabled="@ButtonDisabled"
                           OnClick="async(e)=> { await OnNearestStoreSearchClicked.InvokeAsync(); }"
                           Style="width: 23em;">現在位置から探す</MudButton>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12">
        <MudGrid Justify="Justify.Center">
            <MudItem>
                <MudButton Link="/map" Class="flex-grow-1"
                           Variant="Variant.Filled"
                           StartIcon="@Icons.Material.LocationOn"
                           Color="Color.Primary"
                           Size="Size.Large"
                           Style="width:23em;">地図で探す</MudButton>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>
<MudGrid>
    <MudItem xs="12">
        <MudGrid Justify="Justify.Center">
            <MudItem xs="7" md="4">
                <MudSelect Class="my-6"
                           T="Prefecture?"
                           Value="@SelectedPrefecture"
                           Disabled="@ButtonDisabled"
                           Label="都道府県"
                           Strict="true"
                           Variant="Variant.Outlined"
                           Format="F2"
                           MaxHeight="300"
                           SelectedValuesChanged="(e)=> { SelectedPrefecture = e.FirstOrDefault(); }"
                           OffsetY="true">
                    @foreach (Prefecture prefecture in Enum.GetValues(typeof(Prefecture)))
                    {
                        <MudSelectItem T="Prefecture?" Value="prefecture">@prefecture.GetEnumDescription()</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem>
                <MudButton Class="my-8"
                           Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Search"
                           Color="Color.Primary"
                           Size="Size.Large"
                           OnClick="async(e) => { await OnPrefectureSearchClicked.InvokeAsync((Prefecture)SelectedPrefecture); }"
                           Disabled="@((SelectedPrefecture == null || ButtonDisabled) ? true: false)">検索</MudButton>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public bool ButtonDisabled { get; set; } = false;

    [Parameter]
    public EventCallback<Prefecture> OnPrefectureSearchClicked { get; set; }

    [Parameter]
    public EventCallback OnNearestStoreSearchClicked { get; set; }

    public Prefecture? SelectedPrefecture { get; set; } = null;
}
