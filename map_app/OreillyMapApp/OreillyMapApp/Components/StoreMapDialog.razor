@inject IDialogService DialogService

<MudDialog>
    <DialogContent>
        @if (isLoading)
        {
            <MudGrid Justify="Justify.Center">
                <MudItem>
                    <MudProgressCircular Color="Color.Warning" Style="height:170px;width:170px;" Indeterminate="true" />
                </MudItem>
            </MudGrid>
        }
        else
        {
            @if (selectedStore != null)
            {
                <StoreCard Store="@selectedStore"
                   OnStoreNameButtonClicked="@OnStoreSelected"></StoreCard>
            }
            <StoreMap @ref="map" OnStoreMarkerSelected="@OnStoreSelected" MapZoomLevel="13"></StoreMap>
        }
    </DialogContent>
</MudDialog>
@code {

    private StoreMap map;
    private bool isLoading = false;
    private Store selectedStore;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public List<Store> AllStores { get; set; }

    [Parameter] public Store CurrentStore { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isLoading = false;
            selectedStore = CurrentStore;
            StateHasChanged();
            await map.InitAsync(AllStores, CurrentStore.Position);
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    protected void OnStoreSelected(Store store)
    {
        selectedStore = store;
    }
}